// <auto-generated />
using System;
using LightingSystem.Data.EntityConfigurations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace LightingSystem.API.Migrations
{
    [DbContext(typeof(HomeLightSystemContext))]
    [Migration("20200906114509_NewStart")]
    partial class NewStart
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("LightingSystem.Domain.HomeLightSystem.HomeLightSystem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("homelightsystem");
                });

            modelBuilder.Entity("LightingSystem.Domain.HomeLightSystem.LightBulb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<Guid>("LightPointId")
                        .HasColumnName("lightpointid");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("LightPointId");

                    b.ToTable("lightbulb");
                });

            modelBuilder.Entity("LightingSystem.Domain.HomeLightSystem.LightPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("CustomName");

                    b.Property<Guid>("HomeLightSystemId")
                        .HasColumnName("homelightsystemid");

                    b.Property<bool>("IsAvailable");

                    b.Property<Guid>("LightsGroupId")
                        .HasColumnName("lightsgroupid");

                    b.HasKey("Id");

                    b.HasIndex("HomeLightSystemId");

                    b.HasIndex("LightsGroupId");

                    b.ToTable("lightpoint");
                });

            modelBuilder.Entity("LightingSystem.Domain.Models.LightsGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("LightGroupName");

                    b.HasKey("Id");

                    b.ToTable("lightsgroup");
                });

            modelBuilder.Entity("LightingSystem.Domain.HomeLightSystem.LightBulb", b =>
                {
                    b.HasOne("LightingSystem.Domain.HomeLightSystem.LightPoint")
                        .WithMany("LightBulbs")
                        .HasForeignKey("LightPointId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LightingSystem.Domain.HomeLightSystem.LightPoint", b =>
                {
                    b.HasOne("LightingSystem.Domain.HomeLightSystem.HomeLightSystem")
                        .WithMany("LightPoints")
                        .HasForeignKey("HomeLightSystemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LightingSystem.Domain.Models.LightsGroup", "LightsGroup")
                        .WithMany("LightPoints")
                        .HasForeignKey("LightsGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
